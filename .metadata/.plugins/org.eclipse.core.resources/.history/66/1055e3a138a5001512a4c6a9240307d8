package com.testpedidos;

import java.util.Iterator;
import java.util.List;

import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.StaleStateException;
import org.hibernate.Transaction;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.GenericXmlApplicationContext;

import com.hibernateintegracion.controllers.ProductoController;
import com.hibernateintegracion.controllers.StockController;
import com.hibernateintegracion.domain.Almacenes;
import com.hibernateintegracion.domain.Clientes;
import com.hibernateintegracion.domain.Pedidos;
import com.hibernateintegracion.domain.Productos;
import com.hibernateintegracion.persistence.NewHibernateUtil;

public class ActPedidos {

	public static void main(String[] args) {
		ApplicationContext context = new GenericXmlApplicationContext("appContext.xml");
		StockController stockController = context.getBean("stockController", StockController.class);
		ProductoController productoController = context.getBean("productoController", ProductoController.class);
		
		Productos pr1 = new Productos(1544);
		pr1.setDescripcion("XYZ");;
		pr1.setStock(25);
		
		Session session = new NewHibernateUtil().getSession();
		Query query = session.createQuery("FROM Productos c WHERE c.codigo =:idPro")
				.setParameter("idPro", pr1.getCodigo());
		
		List list = query.list();
		
		Productos pr = (Productos) list.get(0);
		
		System.out.println(pr.getCodigo());	
		
		/*
		
		Transaction tr = session.beginTransaction();
		
		Productos loadPersistence = (Productos) session.load(Productos.class, pr1.getCodigo());
		
		try{
			if(session.contains(loadPersistence)){
				session.update(pr1);	
			}
			tr.commit();
			
		} catch (StaleStateException e){
			tr.rollback();
		}
		
		*/

	}

}
